using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;
using HutongGames.PlayMaker.Actions;
using HutongGames.PlayMaker;
using UnityEngine;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

[ActionCategory("BansheeGz_Sheet")]
[HutongGames.PlayMaker.Tooltip("Query a column to fetch some rows from CARD_DECK and insert into a array")]
public partial class CARD_DECK_query : FsmStateAction
{
    private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
    public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4965480319585121257UL, 263262235149930401UL), () => _metaDefault = null));
    private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
    public static BansheeGz.BGDatabase.BGFieldEntityName __generatedField___name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4903494745224467534UL, 13840345304590027418UL), () => _ufle12jhs77_name = null));
    private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_card_id;
    public static BansheeGz.BGDatabase.BGFieldInt __generatedField___card_id => _ufle12jhs77_card_id ?? (_ufle12jhs77_card_id = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5574080016358172493UL, 8104440270611540398UL), () => _ufle12jhs77_card_id = null));
    private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_type;
    public static BansheeGz.BGDatabase.BGFieldInt __generatedField___type => _ufle12jhs77_type ?? (_ufle12jhs77_type = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4973597262922411439UL, 3780360535999889028UL), () => _ufle12jhs77_type = null));




    [HutongGames.PlayMaker.Tooltip("Query Column")]
		public FsmString _QueryColumn;

		public FsmInt _QueryValue;

		[UIHint(UIHint.Variable)]
		public FsmArray _InsertIntoArray;

		public FsmString _InsertColumnName;

		[HutongGames.PlayMaker.Tooltip("Event is fired if entity was not found")]
		public FsmEvent _NotFoundEvent;






		public override void Reset()
		{

			_QueryColumn = null;
			_QueryValue = null;
			
			_InsertIntoArray = null;

		}
		public override void OnEnter()
		{

			Query();
			Finish();
		}

		public void Query()
		{
			
			MetaDefault.ForEachEntity(entity =>
			{
				_InsertIntoArray.Resize(_InsertIntoArray.Length + 1);
				_InsertIntoArray.Set(_InsertIntoArray.Length - 1, entity.Get<int>(_InsertColumnName.Value));


            },
			entity => entity.Get<int>(_QueryColumn.Value) == _QueryValue.Value);
		}
	
}
